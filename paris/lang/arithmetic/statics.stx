module lang/arithmetic/statics

imports lang/base/statics
imports lang/booleans/statics

signature
  constructors
    Int      : INT -> Exp
    Add      : Exp * Exp -> Exp
    Sub      : Exp * Exp -> Exp
    Mul      : Exp * Exp -> Exp
    IntT     : Type
    INT      : TYPE
    
rules

  typeOfType(s, IntT()) = INT().
  
rules
  
  typeOfExp(s, Int(i)) = INT().
    
  typeOfExp(s, Add(e1, e2)) = INT() :-
    typeOfExp(s, e1) == INT(),
    typeOfExp(s, e2) == INT().
    
  typeOfExp(s, Sub(e1, e2)) = INT() :-
    typeOfExp(s, e1) == INT(),
    typeOfExp(s, e2) == INT().
    
  typeOfExp(s, Mul(e1, e2)) = INT() :-
    typeOfExp(s, e1) == INT(),
    typeOfExp(s, e2) == INT().
    
  